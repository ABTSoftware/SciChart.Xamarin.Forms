//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Xamarin.Forms;


namespace SciChart.Xamarin.iOS.Renderer
{
	using SciChart.iOS.Charting;
	using SciChart.Xamarin.iOS.Renderer.Utility;
	
	
	public partial class FastCandlestickRenderableSeriesiOS : SCIFastCandlestickRenderableSeries, SciChart.Xamarin.Views.Visuals.RenderableSeries.IFastCandlestickRenderableSeries, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public FastCandlestickRenderableSeriesiOS()
		{
		}
		
		public new SciChart.Xamarin.Views.Drawing.IBrushStyle FillDownBrushStyle
		{
			get
			{
				return base.FillDownBrushStyle.BrushStyleToXamarin();
			}
			set
			{
				base.FillDownBrushStyle = value.BrushStyleFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Drawing.IBrushStyle FillUpBrushStyle
		{
			get
			{
				return base.FillUpBrushStyle.BrushStyleToXamarin();
			}
			set
			{
				base.FillUpBrushStyle = value.BrushStyleFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Drawing.IPenStyle StrokeDownStyle
		{
			get
			{
				return base.StrokeDownStyle.PenStyleToXamarin();
			}
			set
			{
				base.StrokeDownStyle = value.PenStyleFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Drawing.IPenStyle StrokeUpStyle
		{
			get
			{
				return base.StrokeUpStyle.PenStyleToXamarin();
			}
			set
			{
				base.StrokeUpStyle = value.PenStyleFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Model.DataSeries.IDataSeries DataSeries
		{
			get
			{
				return base.DataSeries.DataSeriesToXamarin();
			}
			set
			{
				base.DataSeries = value.DataSeriesFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Drawing.IPenStyle StrokeStyle
		{
			get
			{
				return base.StrokeStyle.PenStyleToXamarin();
			}
			set
			{
				base.StrokeStyle = value.PenStyleFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Visuals.PointMarkers.IPointMarker PointMarker
		{
			get
			{
				return base.PointMarker.PointMarkerToXamarin();
			}
			set
			{
				base.PointMarker = value.PointMarkerFromXamarin();
			}
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class FastLineRenderableSeriesiOS : SCIFastLineRenderableSeries, SciChart.Xamarin.Views.Visuals.RenderableSeries.IFastLineRenderableSeries, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public FastLineRenderableSeriesiOS()
		{
		}
		
		public new SciChart.Xamarin.Views.Model.DataSeries.IDataSeries DataSeries
		{
			get
			{
				return base.DataSeries.DataSeriesToXamarin();
			}
			set
			{
				base.DataSeries = value.DataSeriesFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Drawing.IPenStyle StrokeStyle
		{
			get
			{
				return base.StrokeStyle.PenStyleToXamarin();
			}
			set
			{
				base.StrokeStyle = value.PenStyleFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Visuals.PointMarkers.IPointMarker PointMarker
		{
			get
			{
				return base.PointMarker.PointMarkerToXamarin();
			}
			set
			{
				base.PointMarker = value.PointMarkerFromXamarin();
			}
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class ScatterRenderableSeries3DiOS : SCIScatterRenderableSeries3D, SciChart.Xamarin.Views.Visuals.RenderableSeries3D.IScatterRenderableSeries3D, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public ScatterRenderableSeries3DiOS()
		{
		}
		
		public new SciChart.Xamarin.Views.Model.DataSeries3D.IDataSeries3D DataSeries
		{
			get
			{
				return base.DataSeries.DataSeriesToXamarin();
			}
			set
			{
				base.DataSeries = value.DataSeriesFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Visuals.PointMarkers3D.IPointMarker3D PointMarker
		{
			get
			{
				return base.PointMarker.PointMarker3DToXamarin();
			}
			set
			{
				base.PointMarker = value.PointMarker3DFromXamarin();
			}
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class EllipsePointMarkeriOS : SCIEllipsePointMarker, SciChart.Xamarin.Views.Visuals.PointMarkers.IEllipsePointMarker, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public EllipsePointMarkeriOS()
		{
		}
		
		public new SciChart.Xamarin.Views.Drawing.IPenStyle StrokeStyle
		{
			get
			{
				return base.StrokeStyle.PenStyleToXamarin();
			}
			set
			{
				base.StrokeStyle = value.PenStyleFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Drawing.IBrushStyle FillStyle
		{
			get
			{
				return base.FillStyle.BrushStyleToXamarin();
			}
			set
			{
				base.FillStyle = value.BrushStyleFromXamarin();
			}
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class EllipsePointMarker3DiOS : SCIEllipsePointMarker3D, SciChart.Xamarin.Views.Visuals.PointMarkers3D.IEllipsePointMarker3D, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public EllipsePointMarker3DiOS()
		{
		}
		
		public Color Fill
		{
			get
			{
				return base.FillColor.ColorToXamarin();
			}
			set
			{
				base.FillColor = value.ColorFromXamarin();
			}
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class NumericAxisiOS : SCINumericAxis, SciChart.Xamarin.Views.Visuals.Axes.INumericAxis, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public NumericAxisiOS()
		{
		}
		
		public new SciChart.Xamarin.Views.Visuals.Axes.AxisAlignment AxisAlignment
		{
			get
			{
				return base.AxisAlignment.AlignmentToXamarin();
			}
			set
			{
				base.AxisAlignment = value.AlignmentFromXamarin();
			}
		}
		
		public SciChart.Xamarin.Views.Drawing.IBrushStyle AxisBandsFill
		{
			get
			{
				return base.AxisBandsStyle.BrushStyleToXamarin();
			}
			set
			{
				base.AxisBandsStyle = value.BrushStyleFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Visuals.Axes.AutoRange AutoRange
		{
			get
			{
				return base.AutoRange.AutoRangeToXamarin();
			}
			set
			{
				base.AutoRange = value.AutoRangeFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Model.IRange VisibleRange
		{
			get
			{
				return base.VisibleRange.RangeToXamarin();
			}
			set
			{
				base.VisibleRange = value.RangeFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Model.IRange GrowBy
		{
			get
			{
				return base.GrowBy.RangeToXamarin();
			}
			set
			{
				base.GrowBy = value.RangeFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Model.RangeClipMode VisibleRangeLimitMode
		{
			get
			{
				return base.VisibleRangeLimitMode.RangeClipModeToXamarin();
			}
			set
			{
				base.VisibleRangeLimitMode = value.RangeClipModeFromXamarin();
			}
		}
		
		public new System.IComparable MinimalZoomConstrain
		{
			get
			{
				return base.MinimalZoomConstrain.ComparableToXamarin();
			}
			set
			{
				base.MinimalZoomConstrain = value.ComparableFromXamarin();
			}
		}
		
		public new System.IComparable MaximumZoomConstrain
		{
			get
			{
				return base.MaximumZoomConstrain.ComparableToXamarin();
			}
			set
			{
				base.MaximumZoomConstrain = value.ComparableFromXamarin();
			}
		}
		
		public new System.IComparable MajorDelta
		{
			get
			{
				return base.MajorDelta.ComparableToXamarin();
			}
			set
			{
				base.MajorDelta = value.ComparableFromXamarin();
			}
		}
		
		public new System.IComparable MinorDelta
		{
			get
			{
				return base.MinorDelta.ComparableToXamarin();
			}
			set
			{
				base.MinorDelta = value.ComparableFromXamarin();
			}
		}
		
		public new uint MaxAutoTicks
		{
			get
			{
				return base.MaxAutoTicks.UIntToXamarin();
			}
			set
			{
				base.MaxAutoTicks = value.UIntFromXamarin();
			}
		}
		
		public new uint MinorsPerMajor
		{
			get
			{
				return base.MinorsPerMajor.UIntToXamarin();
			}
			set
			{
				base.MinorsPerMajor = value.UIntFromXamarin();
			}
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class NumericAxis3DiOS : SCINumericAxis3D, SciChart.Xamarin.Views.Visuals.Axes3D.INumericAxis3D, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public NumericAxis3DiOS()
		{
		}
		
		public SciChart.Xamarin.Views.Drawing.IBrushStyle AxisBandsFill
		{
			get
			{
				return base.AxisBandsStyle.BrushStyleToXamarin();
			}
			set
			{
				base.AxisBandsStyle = value.BrushStyleFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Visuals.Axes.AutoRange AutoRange
		{
			get
			{
				return base.AutoRange.AutoRangeToXamarin();
			}
			set
			{
				base.AutoRange = value.AutoRangeFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Model.IRange VisibleRange
		{
			get
			{
				return base.VisibleRange.RangeToXamarin();
			}
			set
			{
				base.VisibleRange = value.RangeFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Model.IRange GrowBy
		{
			get
			{
				return base.GrowBy.RangeToXamarin();
			}
			set
			{
				base.GrowBy = value.RangeFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Model.RangeClipMode VisibleRangeLimitMode
		{
			get
			{
				return base.VisibleRangeLimitMode.RangeClipModeToXamarin();
			}
			set
			{
				base.VisibleRangeLimitMode = value.RangeClipModeFromXamarin();
			}
		}
		
		public new System.IComparable MinimalZoomConstrain
		{
			get
			{
				return base.MinimalZoomConstrain.ComparableToXamarin();
			}
			set
			{
				base.MinimalZoomConstrain = value.ComparableFromXamarin();
			}
		}
		
		public new System.IComparable MaximumZoomConstrain
		{
			get
			{
				return base.MaximumZoomConstrain.ComparableToXamarin();
			}
			set
			{
				base.MaximumZoomConstrain = value.ComparableFromXamarin();
			}
		}
		
		public new System.IComparable MajorDelta
		{
			get
			{
				return base.MajorDelta.ComparableToXamarin();
			}
			set
			{
				base.MajorDelta = value.ComparableFromXamarin();
			}
		}
		
		public new System.IComparable MinorDelta
		{
			get
			{
				return base.MinorDelta.ComparableToXamarin();
			}
			set
			{
				base.MinorDelta = value.ComparableFromXamarin();
			}
		}
		
		public new uint MaxAutoTicks
		{
			get
			{
				return base.MaxAutoTicks.UIntToXamarin();
			}
			set
			{
				base.MaxAutoTicks = value.UIntFromXamarin();
			}
		}
		
		public new uint MinorsPerMajor
		{
			get
			{
				return base.MinorsPerMajor.UIntToXamarin();
			}
			set
			{
				base.MinorsPerMajor = value.UIntFromXamarin();
			}
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class BoxAnnotationiOS : SCIBoxAnnotation, SciChart.Xamarin.Views.Visuals.Annotations.IBoxAnnotation, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public BoxAnnotationiOS()
		{
		}
		
		public System.IComparable X1
		{
			get
			{
				return base.X1Value;
			}
			set
			{
				base.X1Value = value;
			}
		}
		
		public System.IComparable X2
		{
			get
			{
				return base.X2Value;
			}
			set
			{
				base.X2Value = value;
			}
		}
		
		public System.IComparable Y1
		{
			get
			{
				return base.Y1Value;
			}
			set
			{
				base.Y1Value = value;
			}
		}
		
		public System.IComparable Y2
		{
			get
			{
				return base.Y2Value;
			}
			set
			{
				base.Y2Value = value;
			}
		}
		
		public new SciChart.Xamarin.Views.Core.Common.Direction2D DragDirections
		{
			get
			{
				return base.DragDirections.Direction2DToXamarin();
			}
			set
			{
				base.DragDirections = value.Direction2DFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Core.Common.Direction2D ResizeDirections
		{
			get
			{
				return base.ResizeDirections.Direction2DToXamarin();
			}
			set
			{
				base.ResizeDirections = value.Direction2DFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Visuals.Annotations.AnnotationSurface AnnotationSurface
		{
			get
			{
				return base.AnnotationSurface.AnnotationSurfaceToXamarin();
			}
			set
			{
				base.AnnotationSurface = value.AnnotationSurfaceFromXamarin();
			}
		}
		
		public new SciChart.Xamarin.Views.Visuals.Annotations.AnnotationCoordinateMode CoordinateMode
		{
			get
			{
				return base.CoordinateMode.AnnotationCoordinateModeToXamarin();
			}
			set
			{
				base.CoordinateMode = value.AnnotationCoordinateModeFromXamarin();
			}
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class ModifierGroupiOS : SCIModifierGroup, SciChart.Xamarin.Views.Modifiers.IModifierGroup, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public ModifierGroupiOS()
		{
		}
		
		public ModifierGroupiOS(SciChart.iOS.Charting.IISCIChartModifier[] childModifiers) : 
				base(childModifiers)
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class PinchZoomModifieriOS : SCIPinchZoomModifier, SciChart.Xamarin.Views.Modifiers.IPinchZoomModifier, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public PinchZoomModifieriOS()
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class TooltipModifieriOS : SCITooltipModifier, SciChart.Xamarin.Views.Modifiers.ITooltipModifier, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public TooltipModifieriOS()
		{
		}
		
		public TooltipModifieriOS(SciChart.iOS.Charting.SCICrossDrawableBehavior crossDrawableBehavior) : 
				base(crossDrawableBehavior)
		{
		}
		
		public TooltipModifieriOS(SciChart.iOS.Charting.SCICrossDrawableBehavior crossDrawableBehavior, SciChart.iOS.Charting.IISCITooltipContainer tooltipContainer) : 
				base(crossDrawableBehavior, tooltipContainer)
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class ZoomExtentsModifieriOS : SCIZoomExtentsModifier, SciChart.Xamarin.Views.Modifiers.IZoomExtentsModifier, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public ZoomExtentsModifieriOS()
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class ZoomPanModifieriOS : SCIZoomPanModifier, SciChart.Xamarin.Views.Modifiers.IZoomPanModifier, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public ZoomPanModifieriOS()
		{
		}
		
		public ZoomPanModifieriOS(System.nuint defaultNumberOfTouches) : 
				base(defaultNumberOfTouches)
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class DoubleRangeiOS : SCIDoubleRange, SciChart.Xamarin.Views.Model.IDoubleRange, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public DoubleRangeiOS()
		{
		}
		
		public DoubleRangeiOS(double min, double max) : 
				base(min, max)
		{
		}
		
		public DoubleRangeiOS(SciChart.iOS.Charting.SCIDoubleRange range) : 
				base(range)
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class OhlcDataSeriesiOS<TX, TY> : OhlcDataSeries<TX,TY>, SciChart.Xamarin.Views.Model.DataSeries.IOhlcDataSeries<TX,TY>, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
		where TX : System.IComparable
		where TY : System.IComparable
	{
		
		public OhlcDataSeriesiOS()
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class XyDataSeriesiOS<TX, TY> : XyDataSeries<TX,TY>, SciChart.Xamarin.Views.Model.DataSeries.IXyDataSeries<TX,TY>, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
		where TX : System.IComparable
		where TY : System.IComparable
	{
		
		public XyDataSeriesiOS()
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class XyzDataSeries3DiOS<TX, TY, TZ> : XyzDataSeries3D<TX,TY,TZ>, SciChart.Xamarin.Views.Model.DataSeries3D.IXyzDataSeries3D<TX,TY,TZ>, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
		where TX : System.IComparable
		where TY : System.IComparable
		where TZ : System.IComparable
	{
		
		public XyzDataSeries3DiOS()
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class FontStyleiOS : SCIFontStyle, SciChart.Xamarin.Views.Drawing.IFontStyle, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public FontStyleiOS()
		{
		}
		
		public FontStyleiOS(float fontSize, UIKit.UIColor textColor) : 
				base(fontSize, textColor)
		{
		}
		
		public FontStyleiOS(float fontSize, uint textColor) : 
				base(fontSize, textColor)
		{
		}
		
		public FontStyleiOS(string fontName, float fontSize, UIKit.UIColor textColor) : 
				base(fontName, fontSize, textColor)
		{
		}
		
		public FontStyleiOS(string fontName, float fontSize, uint textColor) : 
				base(fontName, fontSize, textColor)
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class LinearGradientBrushStyleiOS : SCILinearGradientBrushStyle, SciChart.Xamarin.Views.Drawing.ILinearGradientBrushStyle, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public LinearGradientBrushStyleiOS(uint[] colors, float[] stops) : 
				base(colors, stops)
		{
		}
		
		public LinearGradientBrushStyleiOS(CoreGraphics.CGPoint start, CoreGraphics.CGPoint end, uint[] colors, float[] stops) : 
				base(start, end, colors, stops)
		{
		}
		
		public LinearGradientBrushStyleiOS()
		{
		}
		
		public LinearGradientBrushStyleiOS(UIKit.UIColor startColor, UIKit.UIColor endColor) : 
				base(startColor, endColor)
		{
		}
		
		public LinearGradientBrushStyleiOS(CoreGraphics.CGPoint start, CoreGraphics.CGPoint end, UIKit.UIColor startColor, UIKit.UIColor endColor) : 
				base(start, end, startColor, endColor)
		{
		}
		
		public LinearGradientBrushStyleiOS(uint startColor, uint endColor) : 
				base(startColor, endColor)
		{
		}
		
		public LinearGradientBrushStyleiOS(CoreGraphics.CGPoint start, CoreGraphics.CGPoint end, uint startColor, uint endColor) : 
				base(start, end, startColor, endColor)
		{
		}
		
		public LinearGradientBrushStyleiOS(CoreGraphics.CGPoint start, CoreGraphics.CGPoint end, SciChart.iOS.Charting.SCIUnsignedIntegerValues colors, SciChart.iOS.Charting.SCIFloatValues stops) : 
				base(start, end, colors, stops)
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class SolidBrushStyleiOS : SCISolidBrushStyle, SciChart.Xamarin.Views.Drawing.ISolidBrushStyle, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public SolidBrushStyleiOS()
		{
		}
		
		public SolidBrushStyleiOS(uint colorCode) : 
				base(colorCode)
		{
		}
		
		public SolidBrushStyleiOS(UIKit.UIColor color) : 
				base(color)
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class SolidPenStyleiOS : SCISolidPenStyle, SciChart.Xamarin.Views.Drawing.ISolidPenStyle, SciChart.Xamarin.Views.Core.Common.INativeSciChartObject
	{
		
		public SolidPenStyleiOS(uint color, float thickness, bool antiAliasing, float[] strokeDashArray) : 
				base(color, thickness, antiAliasing, strokeDashArray)
		{
		}
		
		public SolidPenStyleiOS()
		{
		}
		
		public SolidPenStyleiOS(uint colorCode, float thickness) : 
				base(colorCode, thickness)
		{
		}
		
		public SolidPenStyleiOS(UIKit.UIColor color, float thickness) : 
				base(color, thickness)
		{
		}
		
		public SolidPenStyleiOS(UIKit.UIColor color, float thickness, Foundation.NSNumber[] strokeDashArray) : 
				base(color, thickness, strokeDashArray)
		{
		}
		
		public SolidPenStyleiOS(uint colorCode, float thickness, Foundation.NSNumber[] strokeDashArray, bool antiAliasing) : 
				base(colorCode, thickness, strokeDashArray, antiAliasing)
		{
		}
		
		public SciChart.Xamarin.Views.Core.Common.INativeSciChartObject NativeSciChartObject
		{
			get
			{
				return this;
			}
		}
	}
	
	public partial class iOSFactory
	{
		
		public SciChart.Xamarin.Views.Visuals.RenderableSeries.IFastCandlestickRenderableSeries NewFastCandlestickRenderableSeries()
		{
			return new FastCandlestickRenderableSeriesiOS();
		}
		
		public SciChart.Xamarin.Views.Visuals.RenderableSeries.IFastLineRenderableSeries NewFastLineRenderableSeries()
		{
			return new FastLineRenderableSeriesiOS();
		}
		
		public SciChart.Xamarin.Views.Visuals.RenderableSeries3D.IScatterRenderableSeries3D NewScatterRenderableSeries3D()
		{
			return new ScatterRenderableSeries3DiOS();
		}
		
		public SciChart.Xamarin.Views.Visuals.PointMarkers.IEllipsePointMarker NewEllipsePointMarker()
		{
			return new EllipsePointMarkeriOS();
		}
		
		public SciChart.Xamarin.Views.Visuals.PointMarkers3D.IEllipsePointMarker3D NewEllipsePointMarker3D()
		{
			return new EllipsePointMarker3DiOS();
		}
		
		public SciChart.Xamarin.Views.Visuals.Axes.INumericAxis NewNumericAxis()
		{
			return new NumericAxisiOS();
		}
		
		public SciChart.Xamarin.Views.Visuals.Axes3D.INumericAxis3D NewNumericAxis3D()
		{
			return new NumericAxis3DiOS();
		}
		
		public SciChart.Xamarin.Views.Visuals.Annotations.IBoxAnnotation NewBoxAnnotation()
		{
			return new BoxAnnotationiOS();
		}
		
		public SciChart.Xamarin.Views.Modifiers.IModifierGroup NewModifierGroup()
		{
			return new ModifierGroupiOS();
		}
		
		public SciChart.Xamarin.Views.Modifiers.IPinchZoomModifier NewPinchZoomModifier()
		{
			return new PinchZoomModifieriOS();
		}
		
		public SciChart.Xamarin.Views.Modifiers.ITooltipModifier NewTooltipModifier()
		{
			return new TooltipModifieriOS();
		}
		
		public SciChart.Xamarin.Views.Modifiers.IZoomExtentsModifier NewZoomExtentsModifier()
		{
			return new ZoomExtentsModifieriOS();
		}
		
		public SciChart.Xamarin.Views.Modifiers.IZoomPanModifier NewZoomPanModifier()
		{
			return new ZoomPanModifieriOS();
		}
		
		public SciChart.Xamarin.Views.Model.IDoubleRange NewDoubleRange()
		{
			return new DoubleRangeiOS();
		}
		
		public SciChart.Xamarin.Views.Model.IDoubleRange NewDoubleRange(double min, double max)
		{
			return new DoubleRangeiOS(min, max);
		}
		
		public SciChart.Xamarin.Views.Model.DataSeries.IOhlcDataSeries<TX,TY> NewOhlcDataSeries<TX, TY>()
			where TX : System.IComparable
			where TY : System.IComparable
		{
			return new OhlcDataSeriesiOS<TX,TY>();
		}
		
		public SciChart.Xamarin.Views.Model.DataSeries.IXyDataSeries<TX,TY> NewXyDataSeries<TX, TY>()
			where TX : System.IComparable
			where TY : System.IComparable
		{
			return new XyDataSeriesiOS<TX,TY>();
		}
		
		public SciChart.Xamarin.Views.Model.DataSeries3D.IXyzDataSeries3D<TX,TY,TZ> NewXyzDataSeries3D<TX, TY, TZ>()
			where TX : System.IComparable
			where TY : System.IComparable
			where TZ : System.IComparable
		{
			return new XyzDataSeries3DiOS<TX,TY,TZ>();
		}
		
		public SciChart.Xamarin.Views.Drawing.IFontStyle NewFontStyle(float textSize, Color textColor)
		{
			return new FontStyleiOS(textSize, textColor);
		}
		
		public SciChart.Xamarin.Views.Drawing.ILinearGradientBrushStyle NewLinearGradientBrushStyle(float x1, float y1, float x2, float y2, Color startColor, Color endColor)
		{
			return new LinearGradientBrushStyleiOS(x1, y1, x2, y2, startColor, endColor);
		}
		
		public SciChart.Xamarin.Views.Drawing.ISolidBrushStyle NewSolidBrushStyle(Color color)
		{
			return new SolidBrushStyleiOS(color);
		}
		
		public SciChart.Xamarin.Views.Drawing.ISolidPenStyle NewSolidPenStyle(Color color, float thickness, bool antiAliasing, float[] strokeDashArray)
		{
			return new SolidPenStyleiOS(color, thickness, antiAliasing, strokeDashArray);
		}
	}
}
